/*
** Copyright (c) 2020, 2023, Oracle and/or its affiliates.
** Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
*/

import * as AutoGenerated from "./generated/OciRemotePeeringConnection"

export interface OciRemotePeeringConnection extends AutoGenerated.OciRemotePeeringConnection {}

export namespace OciRemotePeeringConnection {
    export function newResource(type?: string): OciRemotePeeringConnection {
        return {
            ...AutoGenerated.OciRemotePeeringConnection.newResource('remote_peering_connection'),
        }
    }
    export function cloneResource(resource: OciRemotePeeringConnection, type?: string): OciRemotePeeringConnection {
        return AutoGenerated.OciRemotePeeringConnection.cloneResource(resource, 'remote_peering_connection') as OciRemotePeeringConnection
    }
    export function getParentId(resource: OciRemotePeeringConnection): string {
        console.debug('OciRemotePeeringConnection: Getting Parent Id to for', resource.displayName, resource.id)
        return resource.compartmentId
    }
    export function setParentId(resource: OciRemotePeeringConnection, parentId: string): OciRemotePeeringConnection {
        console.debug('OciRemotePeeringConnection: Setting Parent Id to', parentId, 'for', resource.displayName, resource.id)
        return resource
    }
    
}

export class OciRemotePeeringConnectionClient {
    static new(): OciRemotePeeringConnection {
        return OciRemotePeeringConnection.newResource()
    }
    static clone(resource: OciRemotePeeringConnection): OciRemotePeeringConnection {
        return OciRemotePeeringConnection.cloneResource(resource)
    }
}

export default OciRemotePeeringConnectionClient
