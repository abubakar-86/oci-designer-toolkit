/*
** Copyright (c) 2020, 2024, Oracle and/or its affiliates.
** Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
*/

import { OcdResources } from "../../../OcdDesign"
import * as AutoGenerated from "./generated/AzureOracleExadataDatabase"

export interface AzureOracleExadataDatabase extends AutoGenerated.AzureOracleExadataDatabase {}

export namespace AzureOracleExadataDatabase {
    
    export function newResource(type?: string): AzureOracleExadataDatabase {
        const resource = {
            ...AutoGenerated.AzureOracleExadataDatabase.newResource('oracle_exadata_database'),
        }
        return resource
    }
    export function cloneResource(resource: AzureOracleExadataDatabase, type?: string): AzureOracleExadataDatabase {
        return AutoGenerated.AzureOracleExadataDatabase.cloneResource(resource, 'oracle_exadata_database') as AzureOracleExadataDatabase
    }
    export function allowedParentTypes(): string[] {
        return []
    }
    export function getParentId(resource: AzureOracleExadataDatabase): string {
        const parentId = resource.compartmentId
        return parentId
    }
    export function setParentId(resource: AzureOracleExadataDatabase, parentId: string): AzureOracleExadataDatabase {
        return resource
    }
    export function getConnectionIds(resource: AzureOracleExadataDatabase, allResources: OcdResources): string[] {
        // This List of Ids does not include the Parent Id or Compartment Id
        let associationIds: string[] = []
        return associationIds
    }
}

export class AzureOracleExadataDatabaseClient extends AutoGenerated.AzureOracleExadataDatabaseClient {
    static new(): AzureOracleExadataDatabase {
        return AzureOracleExadataDatabase.newResource()
    }
    static clone(resource: AzureOracleExadataDatabase): AzureOracleExadataDatabase {
        return AzureOracleExadataDatabase.cloneResource(resource)
    }
}

export default AzureOracleExadataDatabaseClient
