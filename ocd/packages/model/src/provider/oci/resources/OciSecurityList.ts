/*
** Copyright (c) 2020, 2023, Oracle and/or its affiliates.
** Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
*/

import { OciVcn } from "./OciVcn"
import * as AutoGenerated from "./generated/OciSecurityList"

export interface OciSecurityList extends AutoGenerated.OciSecurityList {}

export interface OciEgressSecurityRules extends AutoGenerated.OciEgressSecurityRules {}

export interface OciIcmpOptions extends AutoGenerated.OciIcmpOptions {}

export interface OciTcpOptions extends AutoGenerated.OciTcpOptions {}

export interface OciSourcePortRange extends AutoGenerated.OciSourcePortRange {}

export interface OciUdpOptions extends AutoGenerated.OciUdpOptions {}

export interface OciIngressSecurityRules extends AutoGenerated.OciIngressSecurityRules {}

export namespace OciSecurityList {
    
    export interface OciEgressSecurityRules extends AutoGenerated.OciSecurityList.OciEgressSecurityRules {}

    export interface OciIcmpOptions extends AutoGenerated.OciSecurityList.OciIcmpOptions {}

    export interface OciTcpOptions extends AutoGenerated.OciSecurityList.OciTcpOptions {}

    export interface OciSourcePortRange extends AutoGenerated.OciSecurityList.OciSourcePortRange {}

    export interface OciUdpOptions extends AutoGenerated.OciSecurityList.OciUdpOptions {}

    export interface OciIngressSecurityRules extends AutoGenerated.OciSecurityList.OciIngressSecurityRules {}

    export function newResource(type?: string): OciSecurityList {
        return {
            ...AutoGenerated.OciSecurityList.newResource('security_list'),
            vcnDefault: false
        }
    }
    export function cloneResource(resource: OciSecurityList, type?: string): OciSecurityList {
        return AutoGenerated.OciSecurityList.cloneResource(resource, 'security_list') as OciSecurityList
    }
    export function allowedParentTypes(): string[] {
        console.debug('OciSecurityList: Allowed Parent Types')
        return ['Vcn']
    }
    export function getParentId(resource: OciSecurityList): string {
        console.debug('OciSecurityList: Getting Parent Id to for', resource.displayName, resource.id)
        return resource.vcnId
    }
    export function setParentId(resource: OciSecurityList, parentId: string): OciSecurityList {
        console.debug('OciSecurityList: Setting Parent Id to', parentId, 'for', resource.displayName, resource.id)
        resource.vcnId = parentId
        return resource
    }
    export function getConnectionIds(resource: OciSecurityList): string[] {
        // This List of Ids does not include the Parent Id or Compartment Id
        console.debug('OciSecurityList: Getting Connection Ids to for', resource.displayName, resource.id)
        return []
    }
    
    export function newOciEgressSecurityRules(): OciEgressSecurityRules {
        return {
            ...AutoGenerated.OciSecurityList.newOciEgressSecurityRules(),
        }
    }

    export function newOciIcmpOptions(): OciIcmpOptions {
        return {
            ...AutoGenerated.OciSecurityList.newOciIcmpOptions(),
        }
    }

    export function newOciTcpOptions(): OciTcpOptions {
        return {
            ...AutoGenerated.OciSecurityList.newOciTcpOptions(),
        }
    }

    export function newOciSourcePortRange(): OciSourcePortRange {
        return {
            ...AutoGenerated.OciSecurityList.newOciSourcePortRange(),
        }
    }

    export function newOciUdpOptions(): OciUdpOptions {
        return {
            ...AutoGenerated.OciSecurityList.newOciUdpOptions(),
        }
    }

    export function newOciIngressSecurityRules(): OciIngressSecurityRules {
        return {
            ...AutoGenerated.OciSecurityList.newOciIngressSecurityRules(),
        }
    }

    export function addDefaultRules(resource: OciSecurityList, vcn: OciVcn): void {
        // Add Egress Rule
        if (resource.egressSecurityRules === undefined) resource.egressSecurityRules = []
        resource.egressSecurityRules.push(
            {
                "destination": "0.0.0.0/0",
                "destinationType": "CIDR_BLOCK",
                "icmpOptions": undefined,
                "stateless": false,
                "protocol": "all",
                "tcpOptions": undefined,
                "udpOptions": undefined,
                "description": ""
            }
        );
        // Ingress Rules
        if (resource.ingressSecurityRules === undefined) resource.ingressSecurityRules = []
        resource.ingressSecurityRules.push(
            {
                "icmpOptions": undefined,
                "stateless": false,
                "protocol": "6",
                "source": "0.0.0.0/0",
                "sourceType": "CIDR_BLOCK",
                "tcpOptions": {
                    "max": 22,
                    "min": 22,
                    "sourcePortRange": {
                        "min": 0,
                        "max": 0
                    }
                },
                "udpOptions": undefined,
                "description": ""
            }
        );
        resource.ingressSecurityRules.push(
            {
                "icmpOptions": {
                    "code": 4,
                    "type": 3
                },
                "stateless": false,
                "protocol": "1",
                "source": "0.0.0.0/0",
                "sourceType": "CIDR_BLOCK",
                "tcpOptions": undefined,
                "udpOptions": undefined,
                "description": ""
            }
        );
        resource.ingressSecurityRules.push(
            {
                "icmpOptions": {
                    "code": undefined,
                    "type": 3
                },
                "stateless": false,
                "protocol": "1",
                "source": vcn.cidrBlocks && vcn.cidrBlocks.length > 0 ? vcn.cidrBlocks[0] : '',
                "sourceType": "CIDR_BLOCK",
                "tcpOptions": undefined,
                "udpOptions": undefined,
                "description": ""
            }
        );
    }

}

export class OciSecurityListClient {
    static new(): OciSecurityList {
        return OciSecurityList.newResource()
    }
    static clone(resource: OciSecurityList): OciSecurityList {
        return OciSecurityList.cloneResource(resource)
    }
}

export default OciSecurityListClient
