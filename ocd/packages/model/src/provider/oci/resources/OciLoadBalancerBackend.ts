/*
** Copyright (c) 2020, 2023, Oracle and/or its affiliates.
** Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
*/

import { OcdResources } from "../../../OcdDesign"
import * as AutoGenerated from "./generated/OciLoadBalancerBackend"

export interface OciLoadBalancerBackend extends AutoGenerated.OciLoadBalancerBackend {}

export namespace OciLoadBalancerBackend {
    
    export function newResource(type?: string): OciLoadBalancerBackend {
        return {
            ...AutoGenerated.OciLoadBalancerBackend.newResource('load_balancer_backend'),
            instanceId: ''
        }
    }
    export function cloneResource(resource: OciLoadBalancerBackend, type?: string): OciLoadBalancerBackend {
        return AutoGenerated.OciLoadBalancerBackend.cloneResource(resource, 'load_balancer_backend') as OciLoadBalancerBackend
    }
    export function allowedParentTypes(): string[] {
        console.debug('OciLoadBalancerBackend: Allowed Parent Types')
        return ['LoadBalancerBackendSet']
    }
    export function getParentId(resource: OciLoadBalancerBackend): string {
        console.debug('OciLoadBalancerBackend: Getting Parent Id to for', resource.displayName, resource.id)
        let parentId = resource.backendSetId !== '' ? resource.backendSetId : resource.compartmentId
        return parentId
    }
    export function setParentId(resource: OciLoadBalancerBackend, parentId: string): OciLoadBalancerBackend {
        console.debug('OciLoadBalancerBackend: Setting Parent Id to', parentId, 'for', resource.displayName, resource.id)
        resource.backendSetId = parentId
        return resource
    }
    export function getConnectionIds(resource: OciLoadBalancerBackend, allResources: OcdResources): string[] {
        // This List of Ids does not include the Parent Id or Compartment Id
        console.debug('OciLoadBalancerBackend: Getting Connection Ids to for', resource.displayName, resource.id)
        return []
    }
    
}

export class OciLoadBalancerBackendClient {
    static new(): OciLoadBalancerBackend {
        return OciLoadBalancerBackend.newResource()
    }
    static clone(resource: OciLoadBalancerBackend): OciLoadBalancerBackend {
        return OciLoadBalancerBackend.cloneResource(resource)
    }
}

export default OciLoadBalancerBackendClient
