/*
** Copyright (c) 2020, 2023, Oracle and/or its affiliates.
** Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
*/

import { OciVnicAttachment } from "./OciVnicAttachment"
import { OciVolumeAttachment } from "./OciVolumeAttachment"
import * as AutoGenerated from "./generated/OciInstance"

export interface OciInstance extends AutoGenerated.OciInstance {
    vnicAttachments: OciVnicAttachment[],
    volumeAttachments: OciVolumeAttachment[]
}

export interface OciAgentConfig extends AutoGenerated.OciAgentConfig {}

// export interface OciPluginsConfig extends AutoGenerated.OciPluginsConfig {}

export interface OciCreateVnicDetails extends AutoGenerated.OciCreateVnicDetails {}

export interface OciShapeConfig extends AutoGenerated.OciShapeConfig {}

export interface OciSourceDetails extends AutoGenerated.OciSourceDetails {}

export namespace OciInstance {

    export interface OciAgentConfig extends AutoGenerated.OciInstance.OciAgentConfig {}

    // export interface OciPluginsConfig extends AutoGenerated.OciInstance.OciPluginsConfig {}

    export interface OciCreateVnicDetails extends AutoGenerated.OciInstance.OciCreateVnicDetails {}

    export interface OciShapeConfig extends AutoGenerated.OciInstance.OciShapeConfig {}

    export interface OciSourceDetails extends AutoGenerated.OciInstance.OciSourceDetails {}

    export function newResource(type?: string): OciInstance {
        let resource =  {
            ...AutoGenerated.OciInstance.newResource('instance'),
            vnicAttachments: [],
            volumeAttachments: []
        }
        if (resource.createVnicDetails) resource.createVnicDetails.hostnameLabel = resource.displayName?.toLowerCase().replace(' ', '')
        // Default Shape 
        resource.shape = 'VM.Standard.A1.Flex'
        // Default Availability Domain
        resource.availabilityDomain = '1'
        return resource
    }
    export function cloneResource(resource: OciInstance, type?: string): OciInstance {
        return AutoGenerated.OciInstance.cloneResource(resource, 'instance') as OciInstance
    }
    export function allowedParentTypes(): string[] {
        console.debug('OciInstance: Allowed Parent Types')
        return ['Subnet']
    }
    export function getParentId(resource: OciInstance): string {
        console.debug('OciInstance: Getting Parent Id to for', resource.displayName, resource.id)
        let parentId = resource.createVnicDetails && resource.createVnicDetails.subnetId !== '' ? resource.createVnicDetails.subnetId as string  : resource.compartmentId as string
        if (resource.vnicAttachments && resource.vnicAttachments.length > 0) {
            parentId = resource.vnicAttachments[0].subnetId as string
        }
        return parentId
    }
    export function setParentId(resource: OciInstance, parentId: string): OciInstance {
        console.debug('OciInstance: Setting Parent Id to', parentId, 'for', resource.displayName, resource.id)
        if (resource.createVnicDetails) resource.createVnicDetails.subnetId = parentId
        if (resource.vnicAttachments && resource.vnicAttachments.length > 0) resource.vnicAttachments[0].subnetId = parentId
        return resource
    }
    export function getConnectionIds(resource: OciInstance): string[] {
        // This List of Ids does not include the Parent Id or Compartment Id
        console.debug('OciInstance: Getting Connection Ids to for', resource.displayName, resource.id)
        let associationIds = resource.volumeAttachments ? [...resource.volumeAttachments.map(v => v.volumeId)] : []
        if (resource.vnicAttachments) associationIds = [...associationIds, ...resource.vnicAttachments.slice(1).map(v => v.id)]
        return associationIds
    }
    
    export function newOciAgentConfig(): OciAgentConfig {
        return {
            ...AutoGenerated.OciInstance.newOciAgentConfig(),
        }
    }

    // export function newOciPluginsConfig(): OciPluginsConfig {
    //     return {
    //         ...AutoGenerated.OciInstance.newOciPluginsConfig(),
    //     }
    // }

    export function newOciCreateVnicDetails(): OciCreateVnicDetails {
        return {
            ...AutoGenerated.OciInstance.newOciCreateVnicDetails(),
        }
    }

    export function newOciShapeConfig(): OciShapeConfig {
        return {
            ...AutoGenerated.OciInstance.newOciShapeConfig(),
        }
    }

    export function newOciSourceDetails(): OciSourceDetails {
        return {
            ...AutoGenerated.OciInstance.newOciSourceDetails(),
        }
    }

}

export class OciInstanceClient {
    static new(): OciInstance {
        return OciInstance.newResource()
    }
    static clone(resource: OciInstance): OciInstance {
        return OciInstance.cloneResource(resource)
    }
}

export default OciInstanceClient
