/*
** Copyright (c) 2020, 2023, Oracle and/or its affiliates.
** Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
*/

import * as AutoGenerated from "./generated/OciNosqlTable"

export interface OciNosqlTable extends AutoGenerated.OciNosqlTable {}

export interface OciTableLimits extends AutoGenerated.OciTableLimits {}

export namespace OciNosqlTable {
    
    export interface OciTableLimits extends AutoGenerated.OciNosqlTable.OciTableLimits {}

    export function newResource(type?: string): OciNosqlTable {
        return {
            ...AutoGenerated.OciNosqlTable.newResource('nosql_table'),
        }
    }
    export function cloneResource(resource: OciNosqlTable, type?: string): OciNosqlTable {
        return AutoGenerated.OciNosqlTable.cloneResource(resource, 'nosql_table') as OciNosqlTable
    }
    export function allowedParentTypes(): string[] {
        console.debug('OciNosqlTable: Allowed Parent Types')
        return []
    }
    export function getParentId(resource: OciNosqlTable): string {
        console.debug('OciNosqlTable: Getting Parent Id to for', resource.displayName, resource.id)
        return resource.compartmentId
    }
    export function setParentId(resource: OciNosqlTable, parentId: string): OciNosqlTable {
        console.debug('OciNosqlTable: Setting Parent Id to', parentId, 'for', resource.displayName, resource.id)
        return resource
    }
    export function getConnectionIds(resource: OciNosqlTable): string[] {
        // This List of Ids does not include the Parent Id or Compartment Id
        console.debug('OciNosqlTable: Getting Connection Ids to for', resource.displayName, resource.id)
        return []
    }
    
    export function newOciTableLimits(): OciTableLimits {
        return {
            ...AutoGenerated.OciNosqlTable.newOciTableLimits(),
        }
    }

}

export class OciNosqlTableClient {
    static new(): OciNosqlTable {
        return OciNosqlTable.newResource()
    }
    static clone(resource: OciNosqlTable): OciNosqlTable {
        return OciNosqlTable.cloneResource(resource)
    }
}

export default OciNosqlTableClient
