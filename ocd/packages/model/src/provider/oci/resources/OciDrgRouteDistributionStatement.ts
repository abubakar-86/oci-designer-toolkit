/*
** Copyright (c) 2020, 2023, Oracle and/or its affiliates.
** Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
*/

import * as AutoGenerated from "./generated/OciDrgRouteDistributionStatement"

export interface OciDrgRouteDistributionStatement extends AutoGenerated.OciDrgRouteDistributionStatement {}

export interface OciMatchCriteria extends AutoGenerated.OciMatchCriteria {}

export namespace OciDrgRouteDistributionStatement {
    
    export interface OciMatchCriteria extends AutoGenerated.OciDrgRouteDistributionStatement.OciMatchCriteria {}

    export function newResource(type?: string): OciDrgRouteDistributionStatement {
        return {
            ...AutoGenerated.OciDrgRouteDistributionStatement.newResource('drg_route_distribution_statement'),
        }
    }
    export function cloneResource(resource: OciDrgRouteDistributionStatement, type?: string): OciDrgRouteDistributionStatement {
        return AutoGenerated.OciDrgRouteDistributionStatement.cloneResource(resource, 'drg_route_distribution_statement') as OciDrgRouteDistributionStatement
    }
    export function allowedParentTypes(): string[] {
        console.debug('OciDrgRouteDistributionStatement: Allowed Parent Types')
        return []
    }
    export function getParentId(resource: OciDrgRouteDistributionStatement): string {
        console.debug('OciDrgRouteDistributionStatement: Getting Parent Id to for', resource.displayName, resource.id)
        return resource.compartmentId
    }
    export function setParentId(resource: OciDrgRouteDistributionStatement, parentId: string): OciDrgRouteDistributionStatement {
        console.debug('OciDrgRouteDistributionStatement: Setting Parent Id to', parentId, 'for', resource.displayName, resource.id)
        return resource
    }
    export function getConnectionIds(resource: OciDrgRouteDistributionStatement): string[] {
        // This List of Ids does not include the Parent Id or Compartment Id
        console.debug('OciDrgRouteDistributionStatement: Getting Connection Ids to for', resource.displayName, resource.id)
        return []
    }
    
    export function newOciMatchCriteria(): OciMatchCriteria {
        return {
            ...AutoGenerated.OciDrgRouteDistributionStatement.newOciMatchCriteria(),
        }
    }

}

export class OciDrgRouteDistributionStatementClient {
    static new(): OciDrgRouteDistributionStatement {
        return OciDrgRouteDistributionStatement.newResource()
    }
    static clone(resource: OciDrgRouteDistributionStatement): OciDrgRouteDistributionStatement {
        return OciDrgRouteDistributionStatement.cloneResource(resource)
    }
}

export default OciDrgRouteDistributionStatementClient
