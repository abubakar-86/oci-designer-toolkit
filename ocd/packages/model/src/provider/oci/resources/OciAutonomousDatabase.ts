/*
** Copyright (c) 2020, 2023, Oracle and/or its affiliates.
** Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
*/

import { OcdResources } from "../../../OcdDesign"
import * as AutoGenerated from "./generated/OciAutonomousDatabase"

export interface OciAutonomousDatabase extends AutoGenerated.OciAutonomousDatabase {}

// export interface OciCustomerContacts extends AutoGenerated.OciCustomerContacts {}

export namespace OciAutonomousDatabase {
    
    // export interface OciCustomerContacts extends AutoGenerated.OciAutonomousDatabase.OciCustomerContacts {}

    export function newResource(type?: string): OciAutonomousDatabase {
        let resource = {
            ...AutoGenerated.OciAutonomousDatabase.newResource('autonomous_database'),
        }
        // // Default Workload
        // resource.dbWorkload = 'OLTP'
        // // Licence Model
        // resource.licenseModel = 'BRING_YOUR_OWN_LICENSE'
        // // Auto Scaling
        // resource.isAutoScalingEnabled = true
        return resource
    }
    export function cloneResource(resource: OciAutonomousDatabase, type?: string): OciAutonomousDatabase {
        return AutoGenerated.OciAutonomousDatabase.cloneResource(resource, 'autonomous_database') as OciAutonomousDatabase
    }
    export function allowedParentTypes(): string[] {
        console.debug('OciAutonomousDatabase: Allowed Parent Types')
        return ['Subnet']
    }
    export function getParentId(resource: OciAutonomousDatabase): string {
        console.debug('OciAutonomousDatabase: Getting Parent Id to for', resource.displayName, resource.id)
        let parentId = resource.subnetId !== '' ? resource.subnetId as string  : resource.compartmentId as string
        return parentId
    }
    export function setParentId(resource: OciAutonomousDatabase, parentId: string): OciAutonomousDatabase {
        console.debug('OciAutonomousDatabase: Setting Parent Id to', parentId, 'for', resource.displayName, resource.id)
        resource.subnetId = parentId
        return resource
    }
    export function getConnectionIds(resource: OciAutonomousDatabase, allResources: OcdResources): string[] {
        // This List of Ids does not include the Parent Id or Compartment Id
        console.debug('OciAutonomousDatabase: Getting Connection Ids to for', resource.displayName, resource.id)
        let associationIds = resource.vaultId ? [resource.vaultId] : []
        if (resource.kmsKeyId) associationIds = [...associationIds, resource.kmsKeyId]
        if (resource.secretId) associationIds = [...associationIds, resource.secretId]
        return associationIds
    }
    
    // export function newOciCustomerContacts(): OciCustomerContacts {
    //     return {
    //         ...AutoGenerated.OciAutonomousDatabase.newOciCustomerContacts(),
    //     }
    // }

}

export class OciAutonomousDatabaseClient {
    static new(): OciAutonomousDatabase {
        return OciAutonomousDatabase.newResource()
    }
    static clone(resource: OciAutonomousDatabase): OciAutonomousDatabase {
        return OciAutonomousDatabase.cloneResource(resource)
    }
}

export default OciAutonomousDatabaseClient
