/*
** Copyright (c) 2020, 2024, Oracle and/or its affiliates.
** Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
*/

import { OcdResources } from "../../../OcdDesign"
import * as AutoGenerated from "./generated/GcpOracledatabaseAutonomousDatabaseRegular"

export interface GcpOracledatabaseAutonomousDatabaseRegular extends AutoGenerated.GcpOracledatabaseAutonomousDatabaseRegular {}

export namespace GcpOracledatabaseAutonomousDatabaseRegular {
    
    export function newResource(type?: string): GcpOracledatabaseAutonomousDatabaseRegular {
        const resource = {
            ...AutoGenerated.GcpOracledatabaseAutonomousDatabaseRegular.newResource('oracledatabase_autonomous_database_regular'),
        }
        return resource
    }
    export function cloneResource(resource: GcpOracledatabaseAutonomousDatabaseRegular, type?: string): GcpOracledatabaseAutonomousDatabaseRegular {
        return AutoGenerated.GcpOracledatabaseAutonomousDatabaseRegular.cloneResource(resource, 'oracledatabase_autonomous_database_regular') as GcpOracledatabaseAutonomousDatabaseRegular
    }
    export function allowedParentTypes(): string[] {
        return []
    }
    export function getParentId(resource: GcpOracledatabaseAutonomousDatabaseRegular): string {
        const parentId = resource.compartmentId
        return parentId
    }
    export function setParentId(resource: GcpOracledatabaseAutonomousDatabaseRegular, parentId: string): GcpOracledatabaseAutonomousDatabaseRegular {
        return resource
    }
    export function getConnectionIds(resource: GcpOracledatabaseAutonomousDatabaseRegular, allResources: OcdResources): string[] {
        // This List of Ids does not include the Parent Id or Compartment Id
        let associationIds: string[] = []
        return associationIds
    }
}

export class GcpOracledatabaseAutonomousDatabaseRegularClient extends AutoGenerated.GcpOracledatabaseAutonomousDatabaseRegularClient {
    static new(): GcpOracledatabaseAutonomousDatabaseRegular {
        return GcpOracledatabaseAutonomousDatabaseRegular.newResource()
    }
    static clone(resource: GcpOracledatabaseAutonomousDatabaseRegular): GcpOracledatabaseAutonomousDatabaseRegular {
        return GcpOracledatabaseAutonomousDatabaseRegular.cloneResource(resource)
    }
}

export default GcpOracledatabaseAutonomousDatabaseRegularClient
