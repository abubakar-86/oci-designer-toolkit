/*
** Copyright (c) 2020, 2024, Oracle and/or its affiliates.
** Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
*/

import { OcdResources } from "../../../OcdDesign"
import * as AutoGenerated from "./generated/GcpOracledatabaseCloudVmCluster"

export interface GcpOracledatabaseCloudVmCluster extends AutoGenerated.GcpOracledatabaseCloudVmCluster {}

export namespace GcpOracledatabaseCloudVmCluster {
    
    export function newResource(type?: string): GcpOracledatabaseCloudVmCluster {
        const resource = {
            ...AutoGenerated.GcpOracledatabaseCloudVmCluster.newResource('oracledatabase_cloud_vm_cluster'),
        }
        return resource
    }
    export function cloneResource(resource: GcpOracledatabaseCloudVmCluster, type?: string): GcpOracledatabaseCloudVmCluster {
        return AutoGenerated.GcpOracledatabaseCloudVmCluster.cloneResource(resource, 'oracledatabase_cloud_vm_cluster') as GcpOracledatabaseCloudVmCluster
    }
    export function allowedParentTypes(): string[] {
        return []
    }
    export function getParentId(resource: GcpOracledatabaseCloudVmCluster): string {
        const parentId = resource.compartmentId
        return parentId
    }
    export function setParentId(resource: GcpOracledatabaseCloudVmCluster, parentId: string): GcpOracledatabaseCloudVmCluster {
        return resource
    }
    export function getConnectionIds(resource: GcpOracledatabaseCloudVmCluster, allResources: OcdResources): string[] {
        // This List of Ids does not include the Parent Id or Compartment Id
        let associationIds: string[] = []
        return associationIds
    }
}

export class GcpOracledatabaseCloudVmClusterClient extends AutoGenerated.GcpOracledatabaseCloudVmClusterClient {
    static new(): GcpOracledatabaseCloudVmCluster {
        return GcpOracledatabaseCloudVmCluster.newResource()
    }
    static clone(resource: GcpOracledatabaseCloudVmCluster): GcpOracledatabaseCloudVmCluster {
        return GcpOracledatabaseCloudVmCluster.cloneResource(resource)
    }
}

export default GcpOracledatabaseCloudVmClusterClient
