/*
** Copyright (c) 2020, 2023, Oracle and/or its affiliates.
** Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
*/
// TODO: Remove Following
// @ts-nocheck

import fs from 'fs'
import path from 'path'
import { OcdCodeGenerator } from './OcdCodeGenerator.js'

export class OcdTabularGenerator extends OcdCodeGenerator {
    constructor () {
        super()
        this.ignoreAttributes = [...this.commonElements, ...this.commonIgnoreElements]
    }

    writeGeneratedResourceFiles(outputDirectory: string, resource: string, force = false) {}
    /*
    ** Content for the top level file. This will only be created if it does not exists.
    */
    content = (resource, schema) => {
        const contents = `${this.copyright()}

import { OciResource } from "@ocd/model"
import { OciTabularResourceProps } from "../../../../../types/ReactComponentProperties"

export const ${this.reactResourceName(resource)} = ({ ocdDocument, ociResources, selected }: OciTabularResourceProps): JSX.Element => {
    return (
        <div id='ocd_resource_grid' className='table ocd-tabular-content'>
            <div className='thead ocd-tabular-list-header'><div className='tr'><div className='th'>{ociResources[selected].length}</div><div className='th'>Name</div><div className='th'>Compartment</div></div></div>
            <div className='tbody ocd-tabular-list-body'>
                {ociResources[selected].map((r: OciResource, i: number) => {
                    return <div className='tr' key={\`tabular-{r.id}\`}><div className='td'>{i + 1}</div><div className='td'>{r.displayName}</div><div className='td'>{ocdDocument.getResource(r.compartmentId) ? ocdDocument.getResource(r.compartmentId).displayName : ''}</div></div>
                })}
            </div>
        </div>
    )
}
`

        return contents
    }

    /*
    ** Content for the auto generated file this will be written on each execution.
    */
    autoGeneratedContent = (resource, schema) => {
        const contents = ``

        return contents
    }

    reactResourceName = (resource) => this.resourceName(resource)
    reactResourceGeneratedName = (resource) => this.autoGeneratedResourceName(resource)
    outputFilename = (resource) => `${this.propertiesFilename(resource)}.tsx`
}

export default OcdTabularGenerator
module.exports = { OcdTabularGenerator }
